{"version":3,"sources":["components/TopBar.js","components/Input&Tasks/InputAndAddBtn.js","components/Input&Tasks/TaskAndDeleteBtn.js","images/emptytasks1.png","layouts/home/body/InputAndTasks.js","layouts/home/Body.js","layouts/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","fontFamily","padding","TopBar","classes","className","AppBar","position","style","backgroundColor","Toolbar","Typography","variant","InputAndAddBtn","prop","handleChange","getInput","newTodo","isInput","isInputOne","getUpdate","InputRef","open","handleClose","Transition","yesInput","TextField","color","ref","onChange","e","onSelect","value","placeholder","Button","onClick","size","disableElevation","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","marginTop","onFocus","margin","marginLeft","extendedIcon","TaskAndDeleteBtn","todos","index","myTodoList","setMyTodoList","setClearAll","setIsInput","setIsInputOne","display","fontSize","alignItems","borderRadius","fontWeight","IconButton","delTodo","splice","length","background","border","cursor","paddingLeft","React","forwardRef","props","Slide","direction","InputAndTasks","useState","setNewTodo","clearAll","message","setMessage","setOpen","useRef","target","current","newTodoList","filter","word","console","log","push","Alert","severity","map","val","key","src","emptytasks1","alt","width","Body","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f02740dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    fontFamily: 'Poppins',\r\n    padding: 20\r\n  },\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor: '#00BFA5'}}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          Enjoy your achievements as well as your plans :)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n","//input\r\n//addbtn\r\n\r\nimport React from 'react'\r\nimport './Style.css';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nexport default function InputAndAddBtn(prop) {\r\n\r\n\r\n    let { handleChange,getInput,newTodo,isInput,isInputOne,getUpdate,InputRef,open,handleClose,Transition,yesInput } = prop;\r\n\r\n    return (\r\n        <div>\r\n            {isInputOne&&\r\n                <div>\r\n                <TextField \r\n                    className=\"in\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    ref={InputRef}\r\n                    onChange={(e) => handleChange(e)}\r\n                    onSelect={(e) => handleChange(e)}\r\n                    value={newTodo}\r\n                    placeholder = 'Enter your task'\r\n                    style={{\r\n                        //width: '320px',\r\n                        marginRight: '10px',\r\n                        \r\n                    }} \r\n                    />\r\n                \r\n                <Button \r\n                 onClick={getInput}\r\n                 className=\"btn\"\r\n                 variant=\"contained\" \r\n                 color=\"primary\"\r\n                 size=\"large\"\r\n                 style={{padding: '14px',backgroundColor: '#00BFA5'}}\r\n                 disableElevation\r\n                 >\r\n                    Add\r\n                </Button>\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure to continue ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        You have been already added this task. Do you need to add this task again into the list ?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={yesInput}  style={{color: '#00BFA5'}}>\r\n                        YES\r\n                    </Button>\r\n                    <Button onClick={handleClose} style={{color: '#00BFA5'}}>\r\n                        No\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                \r\n                </div>\r\n            }\r\n            \r\n            {isInput&&\r\n            <div style={{marginTop: '15px'}}>\r\n                <TextField \r\n                    className=\"in\"\r\n                    id=\"outlined-basic\" \r\n                    variant=\"outlined\"\r\n                    ref={InputRef}\r\n                    onChange={(e) => handleChange(e)}\r\n                    onSelect={(e) => handleChange(e)}\r\n                    onFocus={(e) => handleChange(e)}\r\n                    value={newTodo}\r\n                    placeholder = 'Edit your task'\r\n                    style={{\r\n                        //width: '320px',\r\n                        marginRight: '10px',\r\n                    }} \r\n                    />\r\n            <Button variant=\"contained\" color=\"primary\"\r\n                 onClick={getUpdate}\r\n                 className=\"btn\"\r\n                 size=\"large\"\r\n                 style={{padding: '14px',backgroundColor: '#00BFA5'}}\r\n                 disableElevation\r\n                 >\r\n                    Update\r\n                </Button>\r\n\r\n                <Dialog\r\n                    open={open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure to continue ?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        You have been already added this task. Do you need to add this task again into the list ?\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={yesInput}  style={{color: '#00BFA5'}}>\r\n                        YES\r\n                    </Button>\r\n                    <Button onClick={handleClose} style={{color: '#00BFA5'}}>\r\n                        No\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            }\r\n            \r\n    \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","//text\r\n//binicon\r\n\r\nimport React from 'react'\r\nimport './Style.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      marginLeft: 'auto',\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default function TaskAndDeleteBtn(prop) {\r\n\r\n    const classes = useStyles();\r\n\r\n    let { todos,index,myTodoList,setMyTodoList,setClearAll,setIsInput,setIsInputOne} = prop;\r\n\r\n    const deletetask = () => {\r\n        let delTodo = [...myTodoList]\r\n        \r\n        delTodo.splice(index,1)\r\n        setMyTodoList(delTodo)\r\n        \r\n        if(delTodo.length < 2){\r\n            setClearAll(false)\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        setIsInput(true);\r\n        setIsInputOne(false)\r\n        let delTodo = [...myTodoList]\r\n        \r\n        delTodo.splice(index,1)\r\n        setMyTodoList(delTodo)\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"task\" style={{\r\n            display: 'flex',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            // marginTop: '10px',\r\n            backgroundColor: 'white',\r\n            // width: '420px',\r\n            // padding: '10px 20px',\r\n            fontSize: '18px',\r\n            textAlign: 'left',\r\n            alignItems: 'center',\r\n            borderRadius: '5px',\r\n            color: '#00BFA5',\r\n            fontWeight: '500'\r\n            }}>\r\n            <p>{todos}</p>\r\n            \r\n            <IconButton aria-label=\"delete\" className={classes.margin}>\r\n            <DeleteIcon onClick={deletetask} />\r\n            </IconButton>\r\n\r\n            <button\r\n                style={{background: 'none',border: 'none',cursor: 'pointer',color: '#00BFA5',paddingLeft: '5px'}}\r\n                onClick={update}\r\n            ><EditIcon /></button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/emptytasks1.38a78d8c.png\";","//input&addbtn\r\n//task&deletebtn\r\n\r\nimport React from 'react'\r\nimport '../../../components/Input&Tasks/Style.css'\r\nimport InputAndAddBtn from '../../../components/Input&Tasks/InputAndAddBtn'\r\nimport TaskAndDeleteBtn from '../../../components/Input&Tasks/TaskAndDeleteBtn'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport HighlightOffOutlinedIcon from '@material-ui/icons/HighlightOffOutlined';\r\nimport emptytasks1 from '../../../images/emptytasks1.png'\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nexport default function InputAndTasks() {\r\n\r\n\r\n    const [myTodoList,setMyTodoList] = React.useState([]);\r\n    const [newTodo,setNewTodo] = React.useState(\"\");\r\n\r\n    const [clearAll,setClearAll] = React.useState(false);\r\n    const [message,setMessage] = React.useState(false)\r\n    \r\n    const [isInput,setIsInput] = React.useState(false)\r\n    const [isInputOne,setIsInputOne] = React.useState(true)\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const InputRef = React.useRef();\r\n\r\n    const getInput = () => {\r\n        let newTodoList = [...myTodoList];\r\n        if(newTodo.length > 2){\r\n            const result = newTodoList.filter(word => word === newTodo);\r\n            \r\n            if(result.length > 0){\r\n                console.log(\"already added\")\r\n                setOpen(true);\r\n                //setNewTodo(\"\")\r\n            }else{\r\n                //console.log(\"added\")\r\n                newTodoList.push(newTodo)\r\n                setMyTodoList(newTodoList)\r\n                setNewTodo(\"\")\r\n            }\r\n            \r\n \r\n        }else{\r\n            setMessage(true)\r\n            InputRef.current.style.border = '2px solid red';\r\n            InputRef.current.style.borderRadius = '5px';\r\n        }\r\n        \r\n        if(newTodoList.length > 1){\r\n            setClearAll(true)\r\n        }\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setNewTodo(\"\")\r\n      };\r\n\r\n    const yesInput = () => {\r\n        let newTodoList = [...myTodoList];\r\n\r\n\r\n        newTodoList.push(newTodo)\r\n        setMyTodoList(newTodoList)\r\n        //console.log(newTodoList)\r\n        setNewTodo(\"\")\r\n        setOpen(false);\r\n        setIsInputOne(true)\r\n        setIsInput(false)\r\n    }\r\n    const handleChange = (e) => {\r\n        setNewTodo(e.target.value)\r\n        if(e.target.value.length > 0){\r\n            setMessage(false)\r\n            InputRef.current.style.border = 'none';\r\n        }\r\n        \r\n    }\r\n    const getUpdate = () => {\r\n        let newTodoList = [...myTodoList];\r\n        if(newTodo.length > 2){\r\n            const result = newTodoList.filter(word => word === newTodo);\r\n\r\n            if(result.length > 0){\r\n                console.log(\"already added\")\r\n                //setNewTodo(\"\")\r\n                setOpen(true);\r\n            }else{\r\n                //console.log(\"added\")\r\n                newTodoList.push(newTodo)\r\n                setMyTodoList(newTodoList)\r\n                setNewTodo(\"\")\r\n                setIsInputOne(true)\r\n                setIsInput(false)\r\n            }\r\n            \r\n        }else{\r\n            setMessage(true)\r\n            InputRef.current.style.border = '2px solid red';\r\n            InputRef.current.style.borderRadius = '5px';\r\n        }  \r\n    }\r\n\r\n    const clearAllTsk = () => {\r\n        let delTodo = [...myTodoList]\r\n\r\n        delTodo.splice(myTodoList)\r\n        setMyTodoList(delTodo)\r\n        setClearAll(false)  \r\n    }\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     if(myTodoList.length > 0){\r\n    //         let tempJsonString = JSON.stringify(myTodoList);\r\n    //         localStorage.setItem(\"todos\", (tempJsonString));\r\n            \r\n    //     }\r\n        \r\n    //   }, [myTodoList]);\r\n\r\n    //     React.useEffect(() => {\r\n    //     let storeTodo = localStorage.getItem(\"todos\");\r\n    //     let tempTodo = JSON.parse(storeTodo);\r\n    //     setMyTodoList(tempTodo);\r\n    //   }, []);\r\n    \r\n    return (\r\n        <div style={{textAlign: 'center',marginTop: '25px'}}>\r\n            <InputAndAddBtn handleChange={handleChange} getUpdate={getUpdate} getInput={getInput} handleClose={handleClose} yesInput={yesInput} Transition={Transition} open={open} newTodo={newTodo} isInput={isInput} isInputOne={isInputOne} message={message} InputRef={InputRef}/>\r\n\r\n            {message&& \r\n               <Alert variant=\"filled\" className=\"errormsg\" severity=\"error\" style={{\r\n                   marginTop: '10px',\r\n                   marginLeft: 'auto',\r\n                   marginRight: 'auto',\r\n                   }}>\r\n                    Please enter a valid Todo!\r\n                </Alert>\r\n            }\r\n            {myTodoList.length > 0 ?\r\n                myTodoList.map((val,key) => {\r\n                return (\r\n                    <TaskAndDeleteBtn  key={key}\r\n                     todos={val} \r\n                     myTodoList={myTodoList} \r\n                     setMyTodoList={setMyTodoList} \r\n                     index={key} \r\n                     setClearAll={setClearAll} \r\n                     setIsInput={setIsInput}\r\n                     isInput={isInput}\r\n                     isInputOne={isInputOne} \r\n                     setIsInputOne={setIsInputOne}\r\n                      />\r\n                )\r\n                \r\n            }) : (\r\n                <div style={{marginTop: '5px',color: 'gray'}}>\r\n                   <img src={emptytasks1} alt=\"\" width= '200px' />\r\n                   <p>Empty Tasks</p> \r\n                    \r\n                </div>  \r\n            )  \r\n        }\r\n        {clearAll&&    \r\n                <HighlightOffOutlinedIcon  onClick={clearAllTsk} style={{\r\n                    marginTop: '20px',\r\n                    cursor: 'pointer',\r\n                    color: '#00BFA5',\r\n                    fontSize: '35px'\r\n                }} />\r\n}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../../components/Input&Tasks/Style.css'\r\nimport InputAndTasks from './body/InputAndTasks'\r\n\r\nexport default function Body() {\r\n    return (\r\n        <div className=\"block\" style={{padding: '40px'}}>\r\n            <InputAndTasks />\r\n        </div>\r\n    )\r\n}\r\n","//topbar\r\n//input&task\r\n\r\nimport React from 'react'\r\nimport TopBar from '../components/TopBar'\r\nimport Body from './home/Body'\r\n\r\nexport default function Home() {\r\n    return (\r\n    <div>\r\n            <TopBar />\r\n            <Body />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Home from './layouts/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}